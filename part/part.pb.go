// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: part.proto

package part

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreatePartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=Part,proto3" json:"Part,omitempty"` // Part id blank
}

func (x *CreatePartReq) Reset() {
	*x = CreatePartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartReq) ProtoMessage() {}

func (x *CreatePartReq) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartReq.ProtoReflect.Descriptor instead.
func (*CreatePartReq) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePartReq) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type CreatePartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=Part,proto3" json:"Part,omitempty"` // Part id filled in
}

func (x *CreatePartRes) Reset() {
	*x = CreatePartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartRes) ProtoMessage() {}

func (x *CreatePartRes) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartRes.ProtoReflect.Descriptor instead.
func (*CreatePartRes) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePartRes) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type UpdatePartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=Part,proto3" json:"Part,omitempty"`
}

func (x *UpdatePartReq) Reset() {
	*x = UpdatePartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartReq) ProtoMessage() {}

func (x *UpdatePartReq) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartReq.ProtoReflect.Descriptor instead.
func (*UpdatePartReq) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePartReq) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type UpdatePartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=Part,proto3" json:"Part,omitempty"`
}

func (x *UpdatePartRes) Reset() {
	*x = UpdatePartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartRes) ProtoMessage() {}

func (x *UpdatePartRes) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartRes.ProtoReflect.Descriptor instead.
func (*UpdatePartRes) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePartRes) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type ReadPartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadPartReq) Reset() {
	*x = ReadPartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPartReq) ProtoMessage() {}

func (x *ReadPartReq) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPartReq.ProtoReflect.Descriptor instead.
func (*ReadPartReq) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{4}
}

func (x *ReadPartReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadPartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=Part,proto3" json:"Part,omitempty"`
}

func (x *ReadPartRes) Reset() {
	*x = ReadPartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPartRes) ProtoMessage() {}

func (x *ReadPartRes) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPartRes.ProtoReflect.Descriptor instead.
func (*ReadPartRes) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{5}
}

func (x *ReadPartRes) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

type DeletePartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePartReq) Reset() {
	*x = DeletePartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartReq) ProtoMessage() {}

func (x *DeletePartReq) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartReq.ProtoReflect.Descriptor instead.
func (*DeletePartReq) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePartReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePartRes) Reset() {
	*x = DeletePartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartRes) ProtoMessage() {}

func (x *DeletePartRes) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartRes.ProtoReflect.Descriptor instead.
func (*DeletePartRes) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePartRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Unique ID
	ManufacturerId int32  `protobuf:"varint,2,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	VendorCode     string `protobuf:"bytes,3,opt,name=vendor_code,json=vendorCode,proto3" json:"vendor_code,omitempty"`
}

func (x *Part) Reset() {
	*x = Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_part_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_part_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_part_proto_rawDescGZIP(), []int{8}
}

func (x *Part) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Part) GetManufacturerId() int32 {
	if x != nil {
		return x.ManufacturerId
	}
	return 0
}

func (x *Part) GetVendorCode() string {
	if x != nil {
		return x.VendorCode
	}
	return ""
}

var File_part_proto protoreflect.FileDescriptor

var file_part_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x61,
	0x72, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04, 0x50,
	0x61, 0x72, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04,
	0x50, 0x61, 0x72, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x04, 0x50, 0x61, 0x72, 0x74, 0x22, 0x2f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x04, 0x50, 0x61, 0x72, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04,
	0x50, 0x61, 0x72, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x60, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0xec, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x43, 0x72, 0x75, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x42, 0x1e, 0x5a, 0x1c, 0x72, 0x61, 0x6d, 0x69, 0x6c, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x67, 0x69, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x70, 0x61, 0x72,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_part_proto_rawDescOnce sync.Once
	file_part_proto_rawDescData = file_part_proto_rawDesc
)

func file_part_proto_rawDescGZIP() []byte {
	file_part_proto_rawDescOnce.Do(func() {
		file_part_proto_rawDescData = protoimpl.X.CompressGZIP(file_part_proto_rawDescData)
	})
	return file_part_proto_rawDescData
}

var file_part_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_part_proto_goTypes = []interface{}{
	(*CreatePartReq)(nil), // 0: part.CreatePartReq
	(*CreatePartRes)(nil), // 1: part.CreatePartRes
	(*UpdatePartReq)(nil), // 2: part.UpdatePartReq
	(*UpdatePartRes)(nil), // 3: part.UpdatePartRes
	(*ReadPartReq)(nil),   // 4: part.ReadPartReq
	(*ReadPartRes)(nil),   // 5: part.ReadPartRes
	(*DeletePartReq)(nil), // 6: part.DeletePartReq
	(*DeletePartRes)(nil), // 7: part.DeletePartRes
	(*Part)(nil),          // 8: part.Part
}
var file_part_proto_depIdxs = []int32{
	8, // 0: part.CreatePartReq.Part:type_name -> part.Part
	8, // 1: part.CreatePartRes.Part:type_name -> part.Part
	8, // 2: part.UpdatePartReq.Part:type_name -> part.Part
	8, // 3: part.UpdatePartRes.Part:type_name -> part.Part
	8, // 4: part.ReadPartRes.Part:type_name -> part.Part
	0, // 5: part.PartCrudService.CreateParts:input_type -> part.CreatePartReq
	4, // 6: part.PartCrudService.ReadPart:input_type -> part.ReadPartReq
	2, // 7: part.PartCrudService.UpdatePart:input_type -> part.UpdatePartReq
	6, // 8: part.PartCrudService.DeletePart:input_type -> part.DeletePartReq
	1, // 9: part.PartCrudService.CreateParts:output_type -> part.CreatePartRes
	5, // 10: part.PartCrudService.ReadPart:output_type -> part.ReadPartRes
	3, // 11: part.PartCrudService.UpdatePart:output_type -> part.UpdatePartRes
	7, // 12: part.PartCrudService.DeletePart:output_type -> part.DeletePartRes
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_part_proto_init() }
func file_part_proto_init() {
	if File_part_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_part_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_part_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_part_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_part_proto_goTypes,
		DependencyIndexes: file_part_proto_depIdxs,
		MessageInfos:      file_part_proto_msgTypes,
	}.Build()
	File_part_proto = out.File
	file_part_proto_rawDesc = nil
	file_part_proto_goTypes = nil
	file_part_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartCrudServiceClient is the client API for PartCrudService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartCrudServiceClient interface {
	CreateParts(ctx context.Context, in *CreatePartReq, opts ...grpc.CallOption) (*CreatePartRes, error)
	ReadPart(ctx context.Context, in *ReadPartReq, opts ...grpc.CallOption) (*ReadPartRes, error)
	UpdatePart(ctx context.Context, in *UpdatePartReq, opts ...grpc.CallOption) (*UpdatePartRes, error)
	DeletePart(ctx context.Context, in *DeletePartReq, opts ...grpc.CallOption) (*DeletePartRes, error)
}

type partCrudServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartCrudServiceClient(cc grpc.ClientConnInterface) PartCrudServiceClient {
	return &partCrudServiceClient{cc}
}

func (c *partCrudServiceClient) CreateParts(ctx context.Context, in *CreatePartReq, opts ...grpc.CallOption) (*CreatePartRes, error) {
	out := new(CreatePartRes)
	err := c.cc.Invoke(ctx, "/part.PartCrudService/CreateParts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partCrudServiceClient) ReadPart(ctx context.Context, in *ReadPartReq, opts ...grpc.CallOption) (*ReadPartRes, error) {
	out := new(ReadPartRes)
	err := c.cc.Invoke(ctx, "/part.PartCrudService/ReadPart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partCrudServiceClient) UpdatePart(ctx context.Context, in *UpdatePartReq, opts ...grpc.CallOption) (*UpdatePartRes, error) {
	out := new(UpdatePartRes)
	err := c.cc.Invoke(ctx, "/part.PartCrudService/UpdatePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partCrudServiceClient) DeletePart(ctx context.Context, in *DeletePartReq, opts ...grpc.CallOption) (*DeletePartRes, error) {
	out := new(DeletePartRes)
	err := c.cc.Invoke(ctx, "/part.PartCrudService/DeletePart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartCrudServiceServer is the server API for PartCrudService service.
type PartCrudServiceServer interface {
	CreateParts(context.Context, *CreatePartReq) (*CreatePartRes, error)
	ReadPart(context.Context, *ReadPartReq) (*ReadPartRes, error)
	UpdatePart(context.Context, *UpdatePartReq) (*UpdatePartRes, error)
	DeletePart(context.Context, *DeletePartReq) (*DeletePartRes, error)
}

// UnimplementedPartCrudServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartCrudServiceServer struct {
}

func (*UnimplementedPartCrudServiceServer) CreateParts(context.Context, *CreatePartReq) (*CreatePartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateParts not implemented")
}
func (*UnimplementedPartCrudServiceServer) ReadPart(context.Context, *ReadPartReq) (*ReadPartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPart not implemented")
}
func (*UnimplementedPartCrudServiceServer) UpdatePart(context.Context, *UpdatePartReq) (*UpdatePartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePart not implemented")
}
func (*UnimplementedPartCrudServiceServer) DeletePart(context.Context, *DeletePartReq) (*DeletePartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePart not implemented")
}

func RegisterPartCrudServiceServer(s *grpc.Server, srv PartCrudServiceServer) {
	s.RegisterService(&_PartCrudService_serviceDesc, srv)
}

func _PartCrudService_CreateParts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartCrudServiceServer).CreateParts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/part.PartCrudService/CreateParts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartCrudServiceServer).CreateParts(ctx, req.(*CreatePartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartCrudService_ReadPart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartCrudServiceServer).ReadPart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/part.PartCrudService/ReadPart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartCrudServiceServer).ReadPart(ctx, req.(*ReadPartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartCrudService_UpdatePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartCrudServiceServer).UpdatePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/part.PartCrudService/UpdatePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartCrudServiceServer).UpdatePart(ctx, req.(*UpdatePartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartCrudService_DeletePart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartCrudServiceServer).DeletePart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/part.PartCrudService/DeletePart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartCrudServiceServer).DeletePart(ctx, req.(*DeletePartReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartCrudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "part.PartCrudService",
	HandlerType: (*PartCrudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateParts",
			Handler:    _PartCrudService_CreateParts_Handler,
		},
		{
			MethodName: "ReadPart",
			Handler:    _PartCrudService_ReadPart_Handler,
		},
		{
			MethodName: "UpdatePart",
			Handler:    _PartCrudService_UpdatePart_Handler,
		},
		{
			MethodName: "DeletePart",
			Handler:    _PartCrudService_DeletePart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "part.proto",
}
